{"version":3,"sources":["components/Class.js","components/ClassList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Class","name","email","id","className","alt","src","ClassList","classes","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","playableClasses","fetch","then","response","json","users","this","filteredClasses","filter","play","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAgBeA,EAdD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACI,sBAAKC,UAAU,kDAAf,UACA,8BACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,gBAEzB,gCACO,6BAAKF,IACL,4BAAIC,WCYLK,EAnBG,SAAC,GAAmB,IAAhBC,EAAe,EAAfA,QAClB,OACI,8BAEIA,EAAQC,KAAI,SAACC,EAAMC,GACf,OACY,cAAC,EAAD,CAEIR,GAAIK,EAAQG,GAAGR,GACfF,KAAMO,EAAQG,GAAGV,KACjBC,MAAOM,EAAQG,GAAGT,OAHbS,SCKtBC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCCPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YC0CJC,G,wDAxCX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAjB1C,EAAKC,MAAQ,CACTC,gBAAiB,GACjBnB,YAAa,IAJP,E,gEAQO,IAAD,OAChBoB,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACH,EAAKT,SAAS,CAACI,gBAAiBK,S,+BAQlC,IAAD,EACoCC,KAAKP,MAAtCC,EADH,EACGA,gBAAiBnB,EADpB,EACoBA,YACnB0B,EAAkBP,EAAgBQ,QAAO,SAAAC,GAC3C,OAAOA,EAAKxC,KAAKyC,cAAcC,SAAS9B,EAAY6B,kBAEtD,OAAQV,EAAgBY,OAGlB,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,8BACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAWlB,QAAS+B,SANhC,gD,GA7BMM,c,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.668a8a77.chunk.js","sourcesContent":["import React from 'react';\n\nconst Class = ( {name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow shadow-5'>  \n        <div>\n            <img alt='classes' src={`https://robohash.org/${id}?200x200`} />\n        </div>\n         <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div> \n        </div>\n    );\n}\n\nexport default Class;","import React from 'react';\nimport Class from './Class';\n\nconst ClassList = ( { classes } ) => {\n    return (\n        <div>\n            {\n            classes.map((user, i) => {\n                return (\n                            <Class \n                                key={i} \n                                id={classes[i].id} \n                                name={classes[i].name} \n                                email={classes[i].email}\n                                />\n                        );\n                    })\n            }\n        </div>\n    );\n}\n\nexport default ClassList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search classes' \n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport ClassList from '../components/ClassList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            playableClasses: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=> {\n                return response.json()\n            })\n            .then((users) => {\n                this.setState({playableClasses: users});\n            });\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { playableClasses, searchfield } = this.state;\n        const filteredClasses = playableClasses.filter(play =>{\n            return play.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n          return !playableClasses.length ?\n            <h1>Loading...</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>Playable Classes</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ClassList classes={filteredClasses}/>\n                    </Scroll>\n                </div>\n                );\n            }\n        }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}